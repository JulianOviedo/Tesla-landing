---
import Logo from "./Logo.astro";

---

<header
  id="landing-header"
  class="py-3 px-10 flex items-center fixed top-0 w-full justify-between z-40 text-white"
>
  <div class="flex flex-grow basis-0">
    <Logo />
  </div>

  <nav>
    <ul
      class="text-sm [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2 hidden lg:flex "
    >
      <li><a href="#model-s">Model S</a></li>
      <li><a href="#model-3">Model 3</a></li>
      <li><a href="#model-x">Model X</a></li>
      <li><a href="#model-y">Model Y</a></li>
      <li><a href="#solar-roof">Solar Roof</a></li>
      <li><a href="#solar-pannel">Solar Pannels</a></li>
      <li><a href="#powerwall">Powerwall</a></li>
    </ul>
  </nav>

  <nav class="flex flex-grow justify-end basis-0 ">
    <ul
      class="text-sm [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2 hidden lg:flex "
    >
      <li><a href="#">Shop</a></li>
      <li><a href="#">Account</a></li>
      <li><a href="#">Men√∫</a></li>
    </ul>
  </nav>

  <span id='burger-menu' class="text-sm rounded px-4 py-2 cursor-pointer bg-white/5 backdrop-blur-sm inline-block lg:hidden">Menu</span>

  <nav id='burger-nav' class="hidden absolute top-0 right-0 px-12 py-4 w-80 bg-white text-black text-sm h-screen overflow-scroll shadow-[0_0_0_100vmax_rgba(0,0,0,0.7)] transition-all duration-1000">
    <span id='close-burger' class="text-slate-700 py-8 flex justify-end w-full text-xl cursor-pointer ">X</span>
    <ul class="flex flex-col gap-6 ">
      <li><a href="#">Model S</a></li>
      <li><a href="#">Model 3</a></li>
      <li><a href="#">Model X</a></li>
      <li><a href="#">Model Y</a></li>
      <li><a href="#">Solar Roof</a></li>
      <li><a href="#">Powerwall</a></li>
      <li><a href="#">Existing Inventory</a></li>
      <li><a href="#">Used Inventory</a></li>
      <li><a href="#">Trade-In</a></li>
      <li><a href="#">Demo Drive</a></li>
      <li><a href="#">Insurance</a></li>
      <li><a href="#">Shop</a></li>
      <li><a href="#">Account</a></li>
    </ul>
  </nav>


  <div
    id="menu-backdrop"
    class={`
      absolute bg-black/5 backdrop-blur-lg rounded
      translate-x-[var(--left)] translate-y-[var(--top)]
      left-0 top-0
      w-[var(--width)] h-[var(--height)]
      transition-all duration-500
      ease-in-out opacity-0 -z-10
    `}
  >
  </div>
</header>

<script>
const menu = document.querySelector('#burger-menu')
const burgerNav = document.querySelector('#burger-nav')
const close = document.querySelector('#close-burger')


menu.addEventListener('click', () => {
  menu.classList.toggle('hidden')
  burgerNav.classList.toggle('hidden')
})

close.addEventListener('click', () => {
  burgerNav.classList.toggle('hidden')
  menu.classList.toggle('hidden')
})


</script>

<script>
  const listItem = document.querySelectorAll("#landing-header li")
  const menuBackDrop = document.querySelector("#menu-backdrop") as HTMLElement

  listItem.forEach((item) => {
    item.addEventListener("mouseenter", () => {
      const { left, top, width, height } = item.getBoundingClientRect()

      menuBackDrop.style.setProperty("--left", `${left}px`)
      menuBackDrop.style.setProperty("--top", `${top}px`)
      menuBackDrop.style.setProperty("--width", `${width}px`)
      menuBackDrop.style.setProperty("--height", `${height}px`)

      menuBackDrop.style.opacity = "1"
      menuBackDrop.style.visibility = "visible"
    })

    item.addEventListener("mouseleave", () => {
      menuBackDrop.style.opacity = "0"
      menuBackDrop.style.visibility = "hidden"
    })
  })
</script>



<script>
    const headerEl = document.querySelector("#landing-header") as HTMLElement
  
    const observerOptions = {
      root: null,
      rootMargin: "0px", // en cuanto se vea el elemento
      threshold: 0.5, // porcentaje de visibilidad
    }
  
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        const { isIntersecting } = entry
        if (isIntersecting) {
          const color = entry.target.getAttribute("data-header-color")
          headerEl.style.color = color
        }
      })
    }, observerOptions)
  
    const sectionElements = document.querySelectorAll(".landing-section")
    sectionElements.forEach((section) => observer.observe(section))
  </script>